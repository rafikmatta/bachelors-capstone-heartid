<?xml version="1.0"?>
<doc>
    <assembly>
        <name>dotnetNative</name>
    </assembly>
    <members>
        <member name="T:dotnetNative.dotnetclass">
            <summary>
            The dotnetclass class provides a CLS compliant, Object (native) interface to the
            M-functions contained in the files:
            <newpara></newpara>
            D:\School_Work\Design_Project\Conversion_individual\process.m
            <newpara></newpara>
            D:\School_Work\Design_Project\Conversion_individual\dlda.m
            <newpara></newpara>
            D:\School_Work\Design_Project\Conversion_individual\classify_input.m
            <newpara></newpara>
            D:\School_Work\Design_Project\Conversion_individual\F_EigenSys.m
            <newpara></newpara>
            D:\School_Work\Design_Project\Conversion_individual\addtogallery.m
            <newpara></newpara>
            D:\School_Work\Design_Project\Conversion_individual\addtoid.m
            <newpara></newpara>
            D:\School_Work\Design_Project\Conversion_individual\projection.m
            <newpara></newpara>
            D:\School_Work\Design_Project\Conversion_individual\delete_gallery.m
            <newpara></newpara>
            D:\School_Work\Design_Project\Conversion_individual\delete_id.m
            <newpara></newpara>
            D:\School_Work\Design_Project\Conversion_individual\authentication.m
            <newpara></newpara>
            D:\School_Work\Design_Project\Conversion_individual\claim_gallery.m
            <newpara></newpara>
            deployprint.m
            <newpara></newpara>
            printdlg.m
            </summary>
            <remarks>
            @Version 0.0
            </remarks>
        </member>
        <member name="M:dotnetNative.dotnetclass.#cctor">
            <summary internal= "true">
            The static constructor instantiates and initializes the MATLAB Component
            Runtime instance.
            </summary>
        </member>
        <member name="M:dotnetNative.dotnetclass.#ctor">
            <summary>
            Constructs a new instance of the dotnetclass class.
            </summary>
        </member>
        <member name="M:dotnetNative.dotnetclass.Finalize">
            <summary internal= "true">
            Class destructor called by the CLR garbage collector.
            </summary>
        </member>
        <member name="M:dotnetNative.dotnetclass.Dispose">
            <summary>
            Frees the native resources associated with this object
            </summary>
        </member>
        <member name="M:dotnetNative.dotnetclass.Dispose(System.Boolean)">
            <summary internal= "true">
            Internal dispose function
            </summary>
        </member>
        <member name="M:dotnetNative.dotnetclass.process">
             <summary>
             Provides a single output, 0-input Object interface to the process M-function.
             </summary>
             <remarks>
             M-Documentation:
             takes an ecg, filters and gives you a segment of the autocorrelation
             create a filter
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.process(System.Object)">
             <summary>
             Provides a single output, 1-input Object interface to the process M-function.
             </summary>
             <remarks>
             M-Documentation:
             takes an ecg, filters and gives you a segment of the autocorrelation
             create a filter
             </remarks>
             <param name="input">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.process(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Object interface to the process M-function.
             </summary>
             <remarks>
             M-Documentation:
             takes an ecg, filters and gives you a segment of the autocorrelation
             create a filter
             </remarks>
             <param name="input">Input argument #1</param>
             <param name="M">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.process(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the process M-function.
             </summary>
             <remarks>
             M-Documentation:
             takes an ecg, filters and gives you a segment of the autocorrelation
             create a filter
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.process(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the process M-function.
             </summary>
             <remarks>
             M-Documentation:
             takes an ecg, filters and gives you a segment of the autocorrelation
             create a filter
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="input">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.process(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the process M-function.
             </summary>
             <remarks>
             M-Documentation:
             takes an ecg, filters and gives you a segment of the autocorrelation
             create a filter
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="input">Input argument #1</param>
             <param name="M">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.dlda">
             <summary>
             Provides a single output, 0-input Object interface to the dlda M-function.
             </summary>
             <remarks>
             M-Documentation:
             class mean
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.dlda(System.Object)">
             <summary>
             Provides a single output, 1-input Object interface to the dlda M-function.
             </summary>
             <remarks>
             M-Documentation:
             class mean
             </remarks>
             <param name="trainx">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.dlda(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Object interface to the dlda M-function.
             </summary>
             <remarks>
             M-Documentation:
             class mean
             </remarks>
             <param name="trainx">Input argument #1</param>
             <param name="trainy">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.dlda(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the dlda M-function.
             </summary>
             <remarks>
             M-Documentation:
             class mean
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.dlda(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the dlda M-function.
             </summary>
             <remarks>
             M-Documentation:
             class mean
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="trainx">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.dlda(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the dlda M-function.
             </summary>
             <remarks>
             M-Documentation:
             class mean
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="trainx">Input argument #1</param>
             <param name="trainy">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.classify_input">
             <summary>
             Provides a single output, 0-input Object interface to the classify_input
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             top three
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.classify_input(System.Object)">
             <summary>
             Provides a single output, 1-input Object interface to the classify_input
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             top three
             </remarks>
             <param name="input">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.classify_input(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Object interface to the classify_input
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             top three
             </remarks>
             <param name="input">Input argument #1</param>
             <param name="gallery">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.classify_input(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Object interface to the classify_input
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             top three
             </remarks>
             <param name="input">Input argument #1</param>
             <param name="gallery">Input argument #2</param>
             <param name="id">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.classify_input(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the classify_input
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             top three
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.classify_input(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the classify_input
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             top three
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="input">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.classify_input(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the classify_input
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             top three
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="input">Input argument #1</param>
             <param name="gallery">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.classify_input(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the classify_input
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             top three
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="input">Input argument #1</param>
             <param name="gallery">Input argument #2</param>
             <param name="id">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.F_EigenSys">
             <summary>
             Provides a single output, 0-input Object interface to the F_EigenSys
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Syntax: [eVec,eVal]=F_EigenSys(M);
             - Eigen values and vectors of M, sorted by decreasing eigen values.
             Author: Lu Juwei - U of Toronto
             Created in 27 May 2001
             Modified in 6 August 2003
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.F_EigenSys(System.Object)">
             <summary>
             Provides a single output, 1-input Object interface to the F_EigenSys
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             Syntax: [eVec,eVal]=F_EigenSys(M);
             - Eigen values and vectors of M, sorted by decreasing eigen values.
             Author: Lu Juwei - U of Toronto
             Created in 27 May 2001
             Modified in 6 August 2003
             </remarks>
             <param name="M">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.F_EigenSys(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the F_EigenSys M-function.
             </summary>
             <remarks>
             M-Documentation:
             Syntax: [eVec,eVal]=F_EigenSys(M);
             - Eigen values and vectors of M, sorted by decreasing eigen values.
             Author: Lu Juwei - U of Toronto
             Created in 27 May 2001
             Modified in 6 August 2003
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.F_EigenSys(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the F_EigenSys M-function.
             </summary>
             <remarks>
             M-Documentation:
             Syntax: [eVec,eVal]=F_EigenSys(M);
             - Eigen values and vectors of M, sorted by decreasing eigen values.
             Author: Lu Juwei - U of Toronto
             Created in 27 May 2001
             Modified in 6 August 2003
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="M">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.addtogallery">
             <summary>
             Provides a single output, 0-input Object interface to the addtogallery
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.addtogallery(System.Object)">
             <summary>
             Provides a single output, 1-input Object interface to the addtogallery
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="gal">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.addtogallery(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Object interface to the addtogallery
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="gal">Input argument #1</param>
             <param name="addition">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.addtogallery(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the addtogallery M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.addtogallery(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the addtogallery M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="gal">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.addtogallery(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the addtogallery M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="gal">Input argument #1</param>
             <param name="addition">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.addtoid">
             <summary>
             Provides a single output, 0-input Object interface to the addtoid M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.addtoid(System.Object)">
             <summary>
             Provides a single output, 1-input Object interface to the addtoid M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="id">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.addtoid(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Object interface to the addtoid M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="id">Input argument #1</param>
             <param name="subj_id">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.addtoid(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the addtoid M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.addtoid(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the addtoid M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="id">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.addtoid(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the addtoid M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="id">Input argument #1</param>
             <param name="subj_id">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.projection">
             <summary>
             Provides a single output, 0-input Object interface to the projection
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.projection(System.Object)">
             <summary>
             Provides a single output, 1-input Object interface to the projection
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="input">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.projection(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Object interface to the projection
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="input">Input argument #1</param>
             <param name="weight">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.projection(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the projection M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.projection(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the projection M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="input">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.projection(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the projection M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="input">Input argument #1</param>
             <param name="weight">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.delete_gallery">
             <summary>
             Provides a single output, 0-input Object interface to the delete_gallery
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             find the indexes of the windows that need to be removed
             ind will be a vector
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.delete_gallery(System.Object)">
             <summary>
             Provides a single output, 1-input Object interface to the delete_gallery
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             find the indexes of the windows that need to be removed
             ind will be a vector
             </remarks>
             <param name="gal">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.delete_gallery(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Object interface to the delete_gallery
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             find the indexes of the windows that need to be removed
             ind will be a vector
             </remarks>
             <param name="gal">Input argument #1</param>
             <param name="id">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.delete_gallery(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Object interface to the delete_gallery
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             find the indexes of the windows that need to be removed
             ind will be a vector
             </remarks>
             <param name="gal">Input argument #1</param>
             <param name="id">Input argument #2</param>
             <param name="id_num">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.delete_gallery(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the delete_gallery
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             find the indexes of the windows that need to be removed
             ind will be a vector
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.delete_gallery(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the delete_gallery
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             find the indexes of the windows that need to be removed
             ind will be a vector
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="gal">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.delete_gallery(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the delete_gallery
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             find the indexes of the windows that need to be removed
             ind will be a vector
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="gal">Input argument #1</param>
             <param name="id">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.delete_gallery(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the delete_gallery
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             find the indexes of the windows that need to be removed
             ind will be a vector
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="gal">Input argument #1</param>
             <param name="id">Input argument #2</param>
             <param name="id_num">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.delete_id">
             <summary>
             Provides a single output, 0-input Object interface to the delete_id M-function.
             </summary>
             <remarks>
             M-Documentation:
             find the indexes of the windows that need to be removed
             ind will be a vector
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.delete_id(System.Object)">
             <summary>
             Provides a single output, 1-input Object interface to the delete_id M-function.
             </summary>
             <remarks>
             M-Documentation:
             find the indexes of the windows that need to be removed
             ind will be a vector
             </remarks>
             <param name="id">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.delete_id(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Object interface to the delete_id M-function.
             </summary>
             <remarks>
             M-Documentation:
             find the indexes of the windows that need to be removed
             ind will be a vector
             </remarks>
             <param name="id">Input argument #1</param>
             <param name="id_num">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.delete_id(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the delete_id M-function.
             </summary>
             <remarks>
             M-Documentation:
             find the indexes of the windows that need to be removed
             ind will be a vector
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.delete_id(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the delete_id M-function.
             </summary>
             <remarks>
             M-Documentation:
             find the indexes of the windows that need to be removed
             ind will be a vector
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="id">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.delete_id(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the delete_id M-function.
             </summary>
             <remarks>
             M-Documentation:
             find the indexes of the windows that need to be removed
             ind will be a vector
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="id">Input argument #1</param>
             <param name="id_num">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.authentication">
             <summary>
             Provides a single output, 0-input Object interface to the authentication
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             input: user's input (LDA projected)  this is 1xn
             gallery : Claimed record (LDA projected)    mxn   where m is the # of
             windows in the gallery for this subject and n the dimensionality after
             lda
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.authentication(System.Object)">
             <summary>
             Provides a single output, 1-input Object interface to the authentication
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             input: user's input (LDA projected)  this is 1xn
             gallery : Claimed record (LDA projected)    mxn   where m is the # of
             windows in the gallery for this subject and n the dimensionality after
             lda
             </remarks>
             <param name="input">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.authentication(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Object interface to the authentication
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             input: user's input (LDA projected)  this is 1xn
             gallery : Claimed record (LDA projected)    mxn   where m is the # of
             windows in the gallery for this subject and n the dimensionality after
             lda
             </remarks>
             <param name="input">Input argument #1</param>
             <param name="gallery">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.authentication(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Object interface to the authentication
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             input: user's input (LDA projected)  this is 1xn
             gallery : Claimed record (LDA projected)    mxn   where m is the # of
             windows in the gallery for this subject and n the dimensionality after
             lda
             </remarks>
             <param name="input">Input argument #1</param>
             <param name="gallery">Input argument #2</param>
             <param name="thresh">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.authentication(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the authentication
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             input: user's input (LDA projected)  this is 1xn
             gallery : Claimed record (LDA projected)    mxn   where m is the # of
             windows in the gallery for this subject and n the dimensionality after
             lda
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.authentication(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the authentication
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             input: user's input (LDA projected)  this is 1xn
             gallery : Claimed record (LDA projected)    mxn   where m is the # of
             windows in the gallery for this subject and n the dimensionality after
             lda
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="input">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.authentication(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the authentication
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             input: user's input (LDA projected)  this is 1xn
             gallery : Claimed record (LDA projected)    mxn   where m is the # of
             windows in the gallery for this subject and n the dimensionality after
             lda
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="input">Input argument #1</param>
             <param name="gallery">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.authentication(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the authentication
             M-function.
             </summary>
             <remarks>
             M-Documentation:
             input: user's input (LDA projected)  this is 1xn
             gallery : Claimed record (LDA projected)    mxn   where m is the # of
             windows in the gallery for this subject and n the dimensionality after
             lda
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="input">Input argument #1</param>
             <param name="gallery">Input argument #2</param>
             <param name="thresh">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.claim_gallery">
             <summary>
             Provides a single output, 0-input Object interface to the claim_gallery
             M-function.
             </summary>
             <remarks>
             </remarks>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.claim_gallery(System.Object)">
             <summary>
             Provides a single output, 1-input Object interface to the claim_gallery
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="gallery">Input argument #1</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.claim_gallery(System.Object,System.Object)">
             <summary>
             Provides a single output, 2-input Object interface to the claim_gallery
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="gallery">Input argument #1</param>
             <param name="id">Input argument #2</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.claim_gallery(System.Object,System.Object,System.Object)">
             <summary>
             Provides a single output, 3-input Object interface to the claim_gallery
             M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="gallery">Input argument #1</param>
             <param name="id">Input argument #2</param>
             <param name="id_num">Input argument #3</param>
             <returns>An Object containing the first output argument.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.claim_gallery(System.Int32)">
             <summary>
             Provides the standard 0-input Object interface to the claim_gallery M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.claim_gallery(System.Int32,System.Object)">
             <summary>
             Provides the standard 1-input Object interface to the claim_gallery M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="gallery">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.claim_gallery(System.Int32,System.Object,System.Object)">
             <summary>
             Provides the standard 2-input Object interface to the claim_gallery M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="gallery">Input argument #1</param>
             <param name="id">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.claim_gallery(System.Int32,System.Object,System.Object,System.Object)">
             <summary>
             Provides the standard 3-input Object interface to the claim_gallery M-function.
             </summary>
             <remarks>
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="gallery">Input argument #1</param>
             <param name="id">Input argument #2</param>
             <param name="id_num">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:dotnetNative.dotnetclass.WaitForFiguresToDie">
             <summary>
             This method will cause a MATLAB figure window to behave as a modal dialog box.
             The method will not return until all the figure windows associated with this
             component have been closed.
             </summary>
             <remarks>
             An application should only call this method when required to keep the
             MATLAB figure window from disappearing.  Other techniques, such as calling
             Console.ReadLine() from the application should be considered where
             possible.</remarks>
            
        </member>
        <member name="T:MathWorks.MATLAB.NET.ComponentData.MCRComponentState">
            <summary>
            The MCR Component State
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_dotnet_name_data">
            <summary>
            The .NET Builder component name
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_dotnet_root_data">
            <summary>
            The component root data
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_dotnet_public_data">
            <summary>
            The public encryption key for the .NET Builder component
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_dotnet_session_data">
            <summary>
            The session encryption key for the .NET Builder component
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_dotnet_matlabpath_data">
            <summary>
            The MATLAB path for the .NET Builder component
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_dotnet_matlabpath_data_count">
            <summary>
            The MATLAB path count
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_dotnet_classpath_data">
            <summary>
            The class path for the .NET Builder component
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_dotnet_classpath_data_count">
            <summary>
            The class path count
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_dotnet_libpath_data">
            <summary>
            The lib path for the .NET Builder component
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_dotnet_libpath_data_count">
            <summary>
            The lib path count
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_dotnet_mcr_application_options">
            <summary>
            The MCR application options
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_dotnet_mcr_application_option_count">
            <summary>
            The MCR application options count
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_dotnet_mcr_runtime_options">
            <summary>
            The MCR runtime options
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_dotnet_mcr_runtime_option_count">
            <summary>
            The MCR runtime options count
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_dotnet_mcr_pref_dir">
            <summary>
            The component preferences directory
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_dotnet_set_warning_state">
            <summary>
            Runtime warning states
            </summary>
        </member>
        <member name="F:MathWorks.MATLAB.NET.ComponentData.MCRComponentState.MCC_dotnet_set_warning_state_count">
            <summary>
            Runtime warning state count
            </summary>
        </member>
    </members>
</doc>
